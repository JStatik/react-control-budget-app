{"version":3,"sources":["helpers/getInfoLocalStorage.js","hooks/useForm.js","helpers/isValidBudgetForm.js","components/Error.js","components/GetBudget.js","helpers/isValidExpensesForm.js","components/Expenses.js","components/ExpensesList.js","helpers/verifyResidualBudget.js","components/MoneyBudget.js","ControlBudget.js","index.js"],"names":["getInfoLocalStorage","infoExpenses","JSON","parse","localStorage","getItem","expensesLS","expenses","initialBudgetLS","initialBudget","residualBudgetLS","residualBudget","useForm","initialState","useState","formValues","setFormValues","handleInputChange","event","target","name","value","reset","newState","isValidBudgetForm","budget","isNaN","validator","isInt","min","allow_leading_zeroes","isNumeric","msgErrorBudget","isValid","Error","msgError","className","GetBudget","setInitialBudget","setResidualBudget","setMsgError","disabled","setDisabled","autoComplete","onSubmit","preventDefault","parseInt","type","placeholder","onChange","isValidExpensesForm","typeExpense","spendMoney","trim","length","isEmpty","isAlpha","msgErrorExpenses","Expenses","setExpenses","typeExpenseEscaped","escape","expense","id","uniqid","money","onClick","ExpensesList","verifyResidualBudget","MoneyBudget","ControlBudget","useEffect","setItem","stringify","map","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.3b5f4182.chunk.js","sourcesContent":["const getInfoLocalStorage = () => {\r\n    const infoExpenses = JSON.parse( localStorage.getItem( 'ucba' ) );\r\n\r\n    return {\r\n        expensesLS: infoExpenses?.expenses || [],\r\n        initialBudgetLS: infoExpenses?.initialBudget || 0,\r\n        residualBudgetLS: infoExpenses?.residualBudget || 0\r\n    };\r\n};\r\n\r\nexport default getInfoLocalStorage;\r\n","import { useState } from 'react';\r\n\r\nconst useForm = ( initialState = {} ) => {\r\n    const [ formValues, setFormValues ] = useState( initialState );\r\n\r\n    const handleInputChange = ( event ) => {\r\n        setFormValues( {\r\n            ...formValues,\r\n            [ event.target.name ]: event.target.value\r\n        } );\r\n    };\r\n\r\n    const reset = ( newState = initialState ) => {\r\n        setFormValues( newState );\r\n    };\r\n\r\n    return [ formValues, handleInputChange, reset ];\r\n};\r\n\r\nexport default useForm;\r\n","import validator from 'validator';\r\n\r\nconst isValidBudgetForm = ( budget ) => {\r\n    if( isNaN( budget ) || budget <= 0 || !validator.isInt( budget, { min: 1, allow_leading_zeroes: false } ) || !validator.isNumeric( budget ) ) {\r\n        return {\r\n            msgErrorBudget: 'Ingrese un presupuesto válido.',\r\n            isValid: false\r\n        };\r\n    }\r\n\r\n    return {\r\n        msgErrorBudget: null,\r\n        isValid: true\r\n    }\r\n};\r\n\r\nexport default isValidBudgetForm;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Error = ( { msgError } ) => {\r\n    return (\r\n        <p className=\"error alert alert-danger\">{ msgError }</p>\r\n    );\r\n};\r\n\r\nError.propTypes = {\r\n    msgError: PropTypes.string.isRequired\r\n};\r\n\r\nexport default Error;\r\n","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport useForm from '../hooks/useForm';\r\nimport isValidBudgetForm from '../helpers/isValidBudgetForm';\r\nimport Error from './Error';\r\n\r\nconst GetBudget = ( { setInitialBudget, setResidualBudget } ) => {\r\n    const [ formValues, handleInputChange, reset ] = useForm( { budget: '' } );\r\n    const { budget } = formValues;\r\n\r\n    const [ msgError, setMsgError ] = useState( null );\r\n    const [ disabled, setDisabled ] = useState( false );\r\n\r\n    const handleSubmit = ( event ) => {\r\n        event.preventDefault();\r\n        setDisabled( true );\r\n\r\n        const { msgErrorBudget, isValid } = isValidBudgetForm( budget );\r\n        setMsgError( msgErrorBudget );\r\n\r\n        if( isValid ) {\r\n            setInitialBudget( parseInt( budget ) );\r\n            setResidualBudget( parseInt( budget ) );\r\n\r\n            reset();\r\n        }\r\n\r\n        setDisabled( false );\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <h2>Indica tu presupuesto</h2>\r\n\r\n            { msgError && <Error msgError={ msgError } /> }\r\n\r\n            <form autoComplete=\"off\" onSubmit={ handleSubmit }>\r\n                <input\r\n                    type=\"text\"\r\n                    className=\"u-full-width\"\r\n                    placeholder=\"Presupuesto...\"\r\n                    name=\"budget\"\r\n                    value={ budget }\r\n                    onChange={ handleInputChange }\r\n                />\r\n\r\n                <button\r\n                    type=\"submit\"\r\n                    className=\"button-primary u-full-width\"\r\n                    disabled={ disabled }\r\n                >\r\n                    Enviar presupuesto\r\n                </button>\r\n            </form> \r\n        </>\r\n    );\r\n};\r\n\r\nGetBudget.propTypes = {\r\n    setInitialBudget: PropTypes.func.isRequired,\r\n    setResidualBudget: PropTypes.func.isRequired\r\n};\r\n\r\nexport default GetBudget;\r\n","import validator from 'validator';\r\n\r\nconst isValidExpensesForm = ( typeExpense, spendMoney ) => {\r\n    if( typeExpense.trim().length < 2 || validator.isEmpty( typeExpense ) || !validator.isAlpha( typeExpense, [ 'es-ES' ] ) ) {\r\n        return {\r\n            msgErrorExpenses: 'Ingrese un tipo de gasto válido.',\r\n            isValid: false\r\n        };\r\n    } else if( isNaN( spendMoney ) || spendMoney <= 0 || !validator.isInt( spendMoney, { min: 1, allow_leading_zeroes: false } ) || !validator.isNumeric( spendMoney ) ) {\r\n        return {\r\n            msgErrorExpenses: 'Ingrese una cantidad de gasto válida.',\r\n            isValid: false\r\n        };\r\n    }\r\n\r\n    return {\r\n        msgErrorExpenses: null,\r\n        isValid: true\r\n    }\r\n};\r\n\r\nexport default isValidExpensesForm;\r\n","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport validator from 'validator';\r\nimport uniqid from 'uniqid';\r\nimport useForm from '../hooks/useForm';\r\nimport isValidExpensesForm from '../helpers/isValidExpensesForm';\r\nimport Error from './Error';\r\n\r\nconst Expenses = ( { setExpenses, setInitialBudget, setResidualBudget } ) => {\r\n    const [ formValues, handleInputChange, reset ] = useForm( { typeExpense: '', spendMoney: '' } );\r\n    const { typeExpense, spendMoney } = formValues;\r\n\r\n    const [ msgError, setMsgError ] = useState( null );\r\n    const [ disabled, setDisabled ] = useState( false );\r\n\r\n    const handleSubmit = ( event ) => {\r\n        event.preventDefault();\r\n        setDisabled( true );\r\n\r\n        const typeExpenseEscaped = validator.escape( typeExpense );\r\n        const { msgErrorExpenses, isValid } = isValidExpensesForm( typeExpenseEscaped, spendMoney );\r\n        setMsgError( msgErrorExpenses );\r\n\r\n        if( isValid ) {\r\n            const expense = {\r\n                id: uniqid(),\r\n                type: typeExpenseEscaped,\r\n                money: parseInt( spendMoney )\r\n            };\r\n\r\n            setResidualBudget( ( residualBudget ) => residualBudget - spendMoney );\r\n            setExpenses( ( expenses ) => [ ...expenses, expense ] );\r\n            reset();\r\n        }\r\n\r\n        setDisabled( false );\r\n    };\r\n\r\n    const handleClick = () => {\r\n        setExpenses( [] );\r\n        setInitialBudget( 0 );\r\n        setResidualBudget( 0 );\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <h2>Agrega tus gastos</h2>\r\n\r\n            { msgError && <Error msgError={ msgError } /> }\r\n\r\n            <form autoComplete=\"off\" onSubmit={ handleSubmit }>\r\n                <div className=\"campo-form\">\r\n                    <label>Tipo de gasto</label>\r\n                    <input\r\n                        type=\"text\"\r\n                        className=\"u-full-width\"\r\n                        placeholder=\"Ej: Transporte\"\r\n                        name=\"typeExpense\"\r\n                        value={ typeExpense }\r\n                        onChange={ handleInputChange }\r\n                    />\r\n                </div>\r\n\r\n                <div className=\"campo-form\">\r\n                    <label>Dinero a gastar</label>\r\n                    <input\r\n                        type=\"text\"\r\n                        className=\"u-full-width\"\r\n                        placeholder=\"Ej: 100\"\r\n                        name=\"spendMoney\"\r\n                        value={ spendMoney }\r\n                        onChange={ handleInputChange }\r\n                    />\r\n                </div>\r\n\r\n                <button\r\n                    type=\"submit\"\r\n                    className=\"button-primary u-full-width\"\r\n                    disabled={ disabled }\r\n                >\r\n                    Agregar gasto\r\n                </button>\r\n            </form>\r\n\r\n            <button\r\n                className=\"button-reset u-full-width\"\r\n                onClick={ handleClick }\r\n            >\r\n                Reiniciar presupuesto\r\n            </button>\r\n        </>\r\n    );\r\n};\r\n\r\nExpenses.propTypes = {\r\n    setExpenses: PropTypes.func.isRequired,\r\n    setInitialBudget: PropTypes.func.isRequired,\r\n    setResidualBudget: PropTypes.func.isRequired\r\n};\r\n\r\nexport default Expenses;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst ExpensesList = ( { expense } ) => {\r\n    const { type, money } = expense;\r\n\r\n    return (\r\n        <ul className=\"gastos-realizados\">\r\n            <li className=\"gastos\">\r\n                <p>{ `${ type }:` } <span className=\"gasto\">{ `$ ${ money }` }</span></p>\r\n            </li>\r\n        </ul>\r\n    );\r\n};\r\n\r\nExpensesList.propTypes = {\r\n    expense: PropTypes.object.isRequired\r\n};\r\n\r\nexport default ExpensesList;\r\n","const verifyResidualBudget = ( initialBudget, residualBudget ) => {\r\n    if( ( residualBudget / initialBudget ) * 100 >= 75 ) {\r\n        return 'alert-success';\r\n    } else if( ( residualBudget / initialBudget ) * 100 >= 50 ) {\r\n        return 'alert-warning';\r\n    } else {\r\n        return 'alert-danger';\r\n    }\r\n};\r\n\r\nexport default verifyResidualBudget;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport verifyResidualBudget from '../helpers/verifyResidualBudget';\r\n\r\nconst MoneyBudget = ( { initialBudget, residualBudget } ) => {\r\n    return (\r\n        <>\r\n            <div className=\"alert alert-primary\">\r\n                Presupuesto inicial: $ { initialBudget }\r\n            </div>\r\n\r\n            <div className={ `alert ${ verifyResidualBudget( initialBudget, residualBudget ) }` }>\r\n                Presupuesto restante: $ { residualBudget }\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nMoneyBudget.propTypes = {\r\n    initialBudget: PropTypes.number.isRequired,\r\n    residualBudget: PropTypes.number.isRequired\r\n};\r\n\r\nexport default MoneyBudget;\r\n","import React, { useEffect, useState } from 'react';\r\nimport getInfoLocalStorage from './helpers/getInfoLocalStorage';\r\nimport GetBudget from './components/GetBudget';\r\nimport Expenses from './components/Expenses';\r\nimport ExpensesList from './components/ExpensesList';\r\nimport MoneyBudget from './components/MoneyBudget';\r\n\r\nconst ControlBudget = () => {\r\n    const { expensesLS, initialBudgetLS, residualBudgetLS } = getInfoLocalStorage();\r\n\r\n    const [ expenses, setExpenses ] = useState( expensesLS );\r\n    const [ initialBudget, setInitialBudget ] = useState( initialBudgetLS );\r\n    const [ residualBudget, setResidualBudget ] = useState( residualBudgetLS );\r\n\r\n    useEffect( () => {\r\n        localStorage.setItem( 'ucba', JSON.stringify( { expenses, initialBudget, residualBudget } ) );\r\n    }, [ expenses, initialBudget, residualBudget ] );\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <header>\r\n                <h1>Gastos</h1>\r\n\r\n                <div className=\"contenido-principal\">\r\n                    {\r\n                        ( initialBudget === 0 && residualBudget === 0 )\r\n                            ?\r\n                                <GetBudget\r\n                                    setInitialBudget={ setInitialBudget }\r\n                                    setResidualBudget={ setResidualBudget }\r\n                                />\r\n                            :\r\n                                <div className=\"row\">\r\n                                    <div className=\"one-half column\">\r\n                                        <Expenses\r\n                                            setExpenses={ setExpenses }\r\n                                            setInitialBudget={ setInitialBudget }\r\n                                            setResidualBudget={ setResidualBudget }\r\n                                        />\r\n                                    </div>\r\n\r\n                                    <div className=\"one-half column\">\r\n                                        <h2>Listado de gastos</h2>\r\n\r\n                                        {\r\n                                            expenses.map( expense => (\r\n                                                <ExpensesList key={ expense.id } expense={ expense } />\r\n                                            ) )\r\n                                        }\r\n\r\n                                        <MoneyBudget initialBudget={ initialBudget } residualBudget={ residualBudget } />\r\n                                    </div>\r\n                                </div>\r\n                    }\r\n                </div>\r\n            </header>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ControlBudget;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport ControlBudget from './ControlBudget';\r\n\r\nReactDOM.render( <ControlBudget />, document.getElementById( 'root' ) );\r\n"],"sourceRoot":""}